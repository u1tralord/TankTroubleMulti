{"changed":false,"filter":false,"title":"server.js","tooltip":"/server.js","value":"var socketio = require('socket.io');\nvar http = require('http');\nvar express = require('express');\nvar fs = require('fs');\nvar path = require('path');\n\nvar router = express();\nrouter.use(express.static(path.resolve(__dirname, 'client')));\nvar server = http.createServer(router);\n\nvar config = JSON.parse(fs.readFileSync('config.json', 'utf8'));\n\nvar io = socketio.listen(server);\n\nvar tanks = [];\n\nio.sockets.on('connection', function (socket) {\n  console.log('Client Connected! ['+getNewID()+']');\n  \n  var tank = getNewTank(config.startPos.x, config.startPos.y, config.startPos.dir, socket);\n  tanks.push(tank);\n  socket.emit('identify', {id: tank.id});\n  \n  socket.on('tankPosUpdate', function(data) {\n    tank.xPos = data.xPos;\n    tank.yPos = data.yPos;\n    tank.dir = data.dir\n  });\n  \n  socket.on('shoot', function(data) {\n      tank.shoot(data.xPos, data.yPos);\n  });\n  \n  socket.on('disconnect', function() {\n    tanks.splice(tanks.indexOf(tank),1);//remove that tank from the world\n    console.log('Client Disconnected!');\n  });\n});\n\nconsole.log(\"Server started\");\n\nsetInterval(function() {\n  mainThread();\n}, 1000 / config.updateRate);\n\nsetInterval(function() {\n  pingThread();\n}, 1000 / config.pingRate);\n\nfunction mainThread(){\n    tanks.forEach(function(tank) {\n        tank.bullets.forEach(function(bullet) {\n            bullet.update();\n        })\n    })\n}\n\nfunction pingThread(){\n    var tankData = [];\n    \n    tanks.forEach(function(tank) {\n\t\ttankData.push(tank.getPacketData());\n    });\n\t\n\ttanks.forEach(function(tank) {\n\t    tank.socket.emit('updateTanks', tankData);\n\t});\n}\n\nfunction broadcast(eventName, eventData){\n    tanks.forEach(function(tank) {\n       tank.socket.emit(eventName, eventData); \n    });\n}\n\nserver.listen(process.env.PORT || 3000, process.env.IP || \"0.0.0.0\", function(){\n  var addr = server.address();\n  console.log(\"Chat server listening at\", addr.address + \":\" + addr.port);\n});\n\nfunction getNewID(){\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n        s4() + '-' + s4() + s4() + s4();\n}\n\nfunction getNewTank(x, y, dir, socket){\n    var I = {};\n    I.id = getNewID();\n    I.xPos = x;\n    I.yPos = y;\n    I.dir = dir;\n    I.socket = socket;\n    I.score = 0;\n    I.bullets = [];\n    I.maxBullets = 11111111111111111;\n    I.width=40;\n    I.height=30;\n    \n    I.velocity = 0;\n    I.maxVelocity = 10;\n    \n    I.shoot = function (bulletX, bulletY) {\n        var canShoot = true;\n\t\t\n\t\tif(this.bullets.length > 0){\n\t\t\t//console.log(getDistanceBetween(this.x, this.y, lastBullet.x, lastBullet.y));\n\t\t\tvar lastBullet = this.bullets[this.bullets.length-1];\n\t\t\tcanShoot = lastBullet.distanceTraveled > 40 && this.bullets.length < this.maxBullets;\n\t\t}\n\t\t\t\t\n\t\tif(canShoot){\n\t\t    //var bulletX = this.centerpoint().x;\n\t\t    //var bulletY = this.centerpoint().y;\n\t\t    var newBullet = Bullet(bulletX, bulletY, this.dir);\n\t\t\tthis.bullets.push(newBullet);\n\t\t\t\n\t\t\tbroadcast('newBullet', {\n\t\t\t    xPos: bulletX,\n\t\t\t    yPos: bulletY,\n\t\t\t    dir: this.dir\n\t\t\t});\n\t\t\tconsole.log('['+this.id+'] Shoots + ');\n\t\t\t//console.log(\"[\"+this.id+\"]SHOOTING!\");\n\t\t}\n\t\telse{\n\t\t    //console.log(\"TOO FAST!\");\n\t\t    //console.log(this.bullets.length +\" \"+ this.maxBullets);\n\t\t}\n    }\n    \n    I.centerpoint = function() {\n        return {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2\n        };\n    }\n    \n    I.setVelocity = function(){\n        this.velocity = this.velocity.clamp(-1*this.maxVelocity, this.maxVelocity);\n    }\n    \n    I.getPacketData = function(){\n        return {\n          id: this.id,\n          xPos: this.xPos,\n          yPos: this.yPos,\n          dir: this.dir,\n        };\n    }\n    \n    I.die = function(){\n        //TODO\n    }\n    \n    return I;\n}\n\nfunction Bullet(_x, _y, _dir) {\n    var I = {};\n    I.active = true;\n    I.color = \"#000000\";\n    I.size = 10;\n    I.x = _x;\n    I.y = _y;\n\tI.direction = _dir;\n\tI.velocity = 4;\n\tI.distanceTraveled = 0;\n\tI.maxTravelDistance = 1000;\n\t\n\tI.update = function(){\n\t\tthis.move();\n\t\tthis.distanceTraveled+=this.velocity;\n\t\tif (this.distanceTraveled > this.maxTravelDistance)\n\t\t\tthis.active = false;\n\t}\n\t\n\tI.bounce = function() {\n\t    //TODO\n\t}\n\n    I.centerpoint = function() {\n        return {\n            x: this.x + this.size / 2,\n            y: this.y + this.size / 2\n        };\n    }\n\n    I.move = function() {\n        this.x += this.yVelocity * Math.cos(this.direction * Math.PI / 180);\n\t\tthis.y += this.yVelocity * Math.sin(this.direction * Math.PI / 180);\n    }\n    \n    I.die = function(){\n        //TODO\n    }\n    \n    I.getPacketData = function() {\n        return {\n          xPos: this.x,\n          yPos: this.y,\n          dir: this.direction\n        };\n    }\n\n    return I;\n};\n\nfunction Vector2(dir, mag) {\n\treturn Vector(0, 0, mag * Math.cos(dir * (Math.PI/180)), mag * Math.sin(dir * (Math.PI/180)));\n};\n\nfunction Vector(_x1, _y1, _x2, _y2) {\n    var I = {};\n\tI.vX = _x2 - _x1;\n\tI.vY = _y2 - _y1;\n\tI.dir = this.getAngle();\n\tI.mag = this.getMagnitude();\n\t\n\tI.getAngle = function (){\n\t\tvar inRads = Math.atan2(this.vX, this.vY);\n\t\t/*if(inRads < 0)\n\t\t\tinRads = 2*Math.PI + inRads;*/\n\t\treturn inRads * (180/Math.PI);\n\t}\n\n\tI.getMagnitude = function(){\n\t\treturn Math.sqrt(Math.pow(this.vX, 2) + Math.pow(this.vY, 2));\n\t}\n\t\n\tI.set = function(I){\n        I.vX = this.vY;\n        I.vY = this.vY;\n\t\tI.dir = this.dir;\n        I.mag = this.mag;\n    }\n\t\n\tI.unitVector = function() {\n        return Vector(0, 0, this.vX/this.mag, this.vY/this.mag);\n    }\n\t\n\tI.divide = function(scalar) {\n        return Vector(0, 0, this.vX/scalar, this.vY/scalar);\n    }\n\t\n\tI.mulitply = function(scalar) {\n        return Vector(0, 0, this.vX*scalar, this.vY*scalar);\n    }\n\t\n\tI.sum = function(vect) {\n        return Vector(0, 0, this.vX+vect.vX, this.vY+vect.vY);\n    }\n\n    I.diff = function(vect) {\n        return Vector(0, 0, this.vX-vect.vX, this.vY-vect.vY);\n    }\n\n    I.rotate = function(degrees) {\n        return Vector2(this.dir+degrees, this.mag);\n    }\n\n    I.setDir = function(degrees) {\n        return Vector2(this.degrees, this.mag);\n    }\n\t\n\tI.setMagnitude = function(_mag){\n        this.mag = _mag;\n        this.vX = Math.cos(this.dir * (Math.PI/180)) * this.mag;\n        this.vY = Math.sin(this.dir * (Math.PI/180)) * this.mag;\n\n    }\n\n    I.equals = function(vect){\n        return this.vX == vect.vX && this.vY == vect.vY;\n    }\n\t\n\treturn I;\n}\n\nfunction checkBulletCollision(bullet,tank){//returns if there is a collision\n    var bCenter = bullet.centerpoint();\n    var tCenter = tank.centerpoint();\n    var vector = Vector(bCenter.x,bCenter.y,tCenter.x,tCenter.y);\n    var bVector = vector.setMagnitude(bullet.size);\n    var tankMag = Vector(0,0,tank.width,tank.height).mag;\n    var tankDisX = tankMag * Math.cos(180+tank.dir);\n    var tankDisY = tankMag * Math.sin(tank.dir);\n     return (vector.vX<tankDisX+bVector.Vx && vector.vY<tankDisY+bVector.Vy);\n    \n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[{"start":{"row":41,"column":24},"end":{"row":43,"column":0},"placeholder":"..."},{"start":{"row":45,"column":24},"end":{"row":47,"column":0},"placeholder":"..."},{"start":{"row":80,"column":20},"end":{"row":88,"column":0},"placeholder":"..."},{"start":{"row":212,"column":28},"end":{"row":214,"column":0},"placeholder":"..."},{"start":{"row":216,"column":37},"end":{"row":281,"column":0},"placeholder":"..."}],"scrolltop":1700,"scrollleft":0,"selection":{"start":{"row":127,"column":43},"end":{"row":127,"column":43},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":117,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1427718873000}